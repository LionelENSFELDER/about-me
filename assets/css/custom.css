@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap");
@font-face {
  font-family: "Anurati";
  src: url("../fonts/Anurati/Anurati-Regular.ttf") format("ttf"), url("../fonts/Anurati/Anurati-Regular.otf") format("otf"); }

/*TAGS*/
html {
  scroll-behavior: smooth; }

body {
  font-family: "Roboto Condensed";
  color: #fff;
  background-color: #202020; }

h1 {
  font-family: Anurati;
  font-size: 2rem; }

a {
  color: inherit; }

a:hover {
  text-decoration: none;
  color: inherit; }

/*BACKGRONDS*/
.bg-dark {
  background-color: #202020 !important; }

.bg-grey {
  background-color: #2B2B2B; }

.border-main {
  border-color: #8AC89A; }

/* FONT COLOR */
.font-main {
  color: #8AC89A; }

.font-white {
  color: #fff; }

/* FONT WEIGHT */
.custom-date, .custom-url, .custom-tags {
  font-weight: 200;
  font-size: 0.8rem;
  font-style: italic; }

.font-08 {
  font-size: 0.8rem; }

.font-12 {
  font-size: 1.2rem; }

.font-15 {
  font-size: 1.5rem; }

.font-20 {
  font-size: 2rem; }

.font-30 {
  font-size: 3rem; }

.font-40 {
  font-size: 4rem; }

.font-100 {
  font-size: 10rem; }

/* BUTTONS */
.btn-main {
  color: #8AC89A;
  border: 1px solid #8AC89A;
  background-color: transparent; }

.btn-main:hover {
  color: #202020;
  background-color: #8AC89A;
  border: 1px solid transparent; }

.btn-main-light {
  color: #8AC89A;
  border: 1px solid transparent;
  background-color: transparent; }

.btn-main-light:hover {
  color: #8AC89A; }

/*STACK CARD*/
.stack-card {
  background-color: transparent;
  border: none;
  text-align: center;
  color: white; }

.stack-card:hover {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  background-color: #202020; }

.stack-card:hover i {
  color: #8AC89A; }

/* HOVER IMAGE */
.containerHovered {
  position: relative; }

.toHide {
  opacity: 1;
  transition: .5s ease; }

.toDisplay {
  transition: .5s ease;
  opacity: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%); }

.containerHovered:hover .toHide {
  opacity: 0.5; }

.containerHovered:hover .toDisplay {
  opacity: 1; }

.containerHovered:hover img {
  filter: brightness(50%); }

.containerHovered:hover .card {
  background-color: rgba(0, 0, 0, 0.582);
  border: 0; }

.start {
  height: 100vh;
  background-image: url("../img/wallpapers/space.jpg");
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

/* carousel */
#myCarousel {
  margin-left: 50px;
  margin-right: 50px; }

.carousel-control-prev {
  margin-left: -0px; }

.carousel-control-next {
  margin-right: -0px; }

.swiper-container {
  height: 100%; }

/* contactitem */
.contactitem-card {
  background-color: transparent;
  color: #fff; }

.contactitem-card:hover {
  background-color: #2B2B2B; }

.contactitem-card i {
  color: #fff; }

.contactitem-card:hover i {
  color: #8AC89A; }

/* testimonial */
.testimonial {
  background-image: url("../img/wallpapers/wallpaper.jpg");
  height: 100%;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

.testimonial a i:hover {
  background-color: #fff;
  color: #8AC89A; }

.testimonial img.rounded-circle {
  border: 4px solid; }

.testimonial-item-link {
  color: #8AC89A; }

/* particles */
.particles {
  position: fixed;
  display: block;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vh;
  z-index: -999; }

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  /* Animation provies a slight random skew. Check bottom of doc
for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse; }
  .glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse; }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse; }

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(21px, 9999px, 61px, 0);
    transform: skew(0.83deg); }
  5% {
    clip: rect(97px, 9999px, 95px, 0);
    transform: skew(0.63deg); }
  10% {
    clip: rect(90px, 9999px, 21px, 0);
    transform: skew(0.79deg); }
  15% {
    clip: rect(75px, 9999px, 24px, 0);
    transform: skew(0.12deg); }
  20% {
    clip: rect(2px, 9999px, 3px, 0);
    transform: skew(0.15deg); }
  25% {
    clip: rect(69px, 9999px, 6px, 0);
    transform: skew(0.03deg); }
  30% {
    clip: rect(79px, 9999px, 33px, 0);
    transform: skew(0.34deg); }
  35% {
    clip: rect(11px, 9999px, 36px, 0);
    transform: skew(0.53deg); }
  40% {
    clip: rect(97px, 9999px, 85px, 0);
    transform: skew(0.57deg); }
  45% {
    clip: rect(41px, 9999px, 19px, 0);
    transform: skew(0.3deg); }
  50% {
    clip: rect(40px, 9999px, 56px, 0);
    transform: skew(0.35deg); }
  55% {
    clip: rect(82px, 9999px, 49px, 0);
    transform: skew(0.48deg); }
  60% {
    clip: rect(92px, 9999px, 33px, 0);
    transform: skew(0.85deg); }
  65% {
    clip: rect(34px, 9999px, 92px, 0);
    transform: skew(0.47deg); }
  70% {
    clip: rect(50px, 9999px, 54px, 0);
    transform: skew(0.64deg); }
  75% {
    clip: rect(60px, 9999px, 72px, 0);
    transform: skew(0.59deg); }
  80% {
    clip: rect(60px, 9999px, 81px, 0);
    transform: skew(0.71deg); }
  85% {
    clip: rect(57px, 9999px, 71px, 0);
    transform: skew(0.9deg); }
  90% {
    clip: rect(83px, 9999px, 60px, 0);
    transform: skew(0.85deg); }
  95% {
    clip: rect(79px, 9999px, 60px, 0);
    transform: skew(0.16deg); }
  100% {
    clip: rect(19px, 9999px, 43px, 0);
    transform: skew(0.95deg); } }

@keyframes glitch-anim2 {
  0% {
    clip: rect(36px, 9999px, 6px, 0);
    transform: skew(0.21deg); }
  5% {
    clip: rect(25px, 9999px, 13px, 0);
    transform: skew(0.04deg); }
  10% {
    clip: rect(59px, 9999px, 89px, 0);
    transform: skew(0.12deg); }
  15% {
    clip: rect(5px, 9999px, 26px, 0);
    transform: skew(0.89deg); }
  20% {
    clip: rect(88px, 9999px, 65px, 0);
    transform: skew(0.84deg); }
  25% {
    clip: rect(6px, 9999px, 70px, 0);
    transform: skew(0.4deg); }
  30% {
    clip: rect(49px, 9999px, 87px, 0);
    transform: skew(0.77deg); }
  35% {
    clip: rect(84px, 9999px, 11px, 0);
    transform: skew(0.26deg); }
  40% {
    clip: rect(83px, 9999px, 93px, 0);
    transform: skew(0.72deg); }
  45% {
    clip: rect(73px, 9999px, 82px, 0);
    transform: skew(0.5deg); }
  50% {
    clip: rect(53px, 9999px, 41px, 0);
    transform: skew(0.77deg); }
  55% {
    clip: rect(63px, 9999px, 41px, 0);
    transform: skew(0.74deg); }
  60% {
    clip: rect(1px, 9999px, 15px, 0);
    transform: skew(0.72deg); }
  65% {
    clip: rect(10px, 9999px, 12px, 0);
    transform: skew(0.11deg); }
  70% {
    clip: rect(37px, 9999px, 47px, 0);
    transform: skew(0.28deg); }
  75% {
    clip: rect(96px, 9999px, 69px, 0);
    transform: skew(0.73deg); }
  80% {
    clip: rect(65px, 9999px, 55px, 0);
    transform: skew(0.39deg); }
  85% {
    clip: rect(27px, 9999px, 6px, 0);
    transform: skew(0.54deg); }
  90% {
    clip: rect(29px, 9999px, 67px, 0);
    transform: skew(0.85deg); }
  95% {
    clip: rect(25px, 9999px, 56px, 0);
    transform: skew(0.01deg); }
  100% {
    clip: rect(16px, 9999px, 25px, 0);
    transform: skew(0.09deg); } }

@keyframes glitch-skew {
  0% {
    transform: skew(-4deg); }
  10% {
    transform: skew(4deg); }
  20% {
    transform: skew(3deg); }
  30% {
    transform: skew(0deg); }
  40% {
    transform: skew(-1deg); }
  50% {
    transform: skew(-3deg); }
  60% {
    transform: skew(3deg); }
  70% {
    transform: skew(4deg); }
  80% {
    transform: skew(-3deg); }
  90% {
    transform: skew(2deg); }
  100% {
    transform: skew(1deg); } }
