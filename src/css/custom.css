@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Libre+Barcode+128+Text&family=Press+Start+2P&display=swap");
html {
  scroll-behavior: smooth; }

body {
  font-family: "Roboto Condensed";
  color: #FFF;
  background: url("../../assets/img/wallpapers/main.gif") no-repeat center fixed;
  background-size: cover; }

footer {
  font-family: "Libre Barcode 128 Text"; }

h1 {
  font-family: "Press Start 2P";
  font-size: 2rem; }

a {
  color: inherit; }
  a:hover {
    text-decoration: none;
    color: inherit; }

.font-main {
  color: #FC1B24; }

.font-white {
  color: #FFF; }

.custom-date,
.custom-url,
.custom-tags {
  font-weight: 200;
  font-size: 0.8rem;
  font-style: italic; }

.font-08 {
  font-size: 0.8rem; }

.font-15 {
  font-size: 1.5rem; }

.font-20 {
  font-size: 2rem; }

.font-30 {
  font-size: 3rem; }

.btn-main {
  color: #FC1B24;
  border: 1px solid #FC1B24;
  background-color: transparent; }
  .btn-main:hover {
    color: #202020;
    background-color: #FC1B24;
    border: 1px solid transparent; }

.btn-main-light {
  color: #FC1B24;
  border: 1px solid transparent;
  background-color: transparent; }
  .btn-main-light:hover {
    color: #FC1B24; }

.stack-card {
  background-color: transparent;
  border: none;
  text-align: center;
  color: white; }
  .stack-card:hover {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    background-color: #20202093; }
  .stack-card:hover i {
    color: #FC1B24; }

.workCard h1 {
  opacity: 0.4;
  font-size: 1.3em; }

.workCard:hover {
  transform: scale(1.1); }
  .workCard:hover:hover h1 {
    opacity: 1;
    color: #FC1B24; }
  .workCard:hover:hover img {
    opacity: 0.2; }

.start {
  height: 100vh;
  background-image: url("../img/wallpapers/space.jpg");
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

#myCarousel {
  margin-left: 50px;
  margin-right: 50px; }

.carousel-control-prev,
.carousel-control-next {
  margin-left: -0px; }

.testimonial {
  background-image: url("../img/wallpapers/wallpaper.jpg");
  height: 100%;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

.testimonial a i:hover {
  background-color: #FFF;
  color: #FC1B24; }

.testimonial img.rounded-circle {
  border: 4px solid; }

.testimonial-item-link {
  color: #FC1B24; }

/* C_O_N_T_A_C_T  I_T_E_M */
.contactitem-card {
  background-color: transparent; }
  .contactitem-card:hover {
    background-color: #20202093; }
  .contactitem-card:hover i {
    color: #FC1B24; }

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  /* Animation provies a slight random skew. Check bottom of doc
    for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse; }
  .glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse; }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse; }

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(24px, 9999px, 65px, 0);
    transform: skew(0.04deg); }
  5% {
    clip: rect(51px, 9999px, 48px, 0);
    transform: skew(0.01deg); }
  10% {
    clip: rect(93px, 9999px, 89px, 0);
    transform: skew(0.77deg); }
  15% {
    clip: rect(44px, 9999px, 5px, 0);
    transform: skew(0.32deg); }
  20% {
    clip: rect(72px, 9999px, 91px, 0);
    transform: skew(0.25deg); }
  25% {
    clip: rect(4px, 9999px, 82px, 0);
    transform: skew(0.78deg); }
  30% {
    clip: rect(33px, 9999px, 60px, 0);
    transform: skew(0.38deg); }
  35% {
    clip: rect(61px, 9999px, 37px, 0);
    transform: skew(0.65deg); }
  40% {
    clip: rect(23px, 9999px, 51px, 0);
    transform: skew(0.53deg); }
  45% {
    clip: rect(77px, 9999px, 43px, 0);
    transform: skew(0.78deg); }
  50% {
    clip: rect(66px, 9999px, 4px, 0);
    transform: skew(0.4deg); }
  55% {
    clip: rect(36px, 9999px, 43px, 0);
    transform: skew(0.15deg); }
  60% {
    clip: rect(8px, 9999px, 60px, 0);
    transform: skew(0.57deg); }
  65% {
    clip: rect(62px, 9999px, 19px, 0);
    transform: skew(0.98deg); }
  70% {
    clip: rect(74px, 9999px, 9px, 0);
    transform: skew(0.28deg); }
  75% {
    clip: rect(98px, 9999px, 43px, 0);
    transform: skew(0.91deg); }
  80% {
    clip: rect(83px, 9999px, 75px, 0);
    transform: skew(0.63deg); }
  85% {
    clip: rect(60px, 9999px, 23px, 0);
    transform: skew(0.43deg); }
  90% {
    clip: rect(41px, 9999px, 91px, 0);
    transform: skew(0.19deg); }
  95% {
    clip: rect(45px, 9999px, 64px, 0);
    transform: skew(0.17deg); }
  100% {
    clip: rect(93px, 9999px, 43px, 0);
    transform: skew(0.55deg); } }

@keyframes glitch-anim2 {
  0% {
    clip: rect(71px, 9999px, 57px, 0);
    transform: skew(0.18deg); }
  5% {
    clip: rect(1px, 9999px, 91px, 0);
    transform: skew(0.37deg); }
  10% {
    clip: rect(46px, 9999px, 92px, 0);
    transform: skew(0.93deg); }
  15% {
    clip: rect(64px, 9999px, 51px, 0);
    transform: skew(0.58deg); }
  20% {
    clip: rect(38px, 9999px, 23px, 0);
    transform: skew(0.01deg); }
  25% {
    clip: rect(61px, 9999px, 57px, 0);
    transform: skew(0.89deg); }
  30% {
    clip: rect(24px, 9999px, 5px, 0);
    transform: skew(0.89deg); }
  35% {
    clip: rect(80px, 9999px, 85px, 0);
    transform: skew(0.84deg); }
  40% {
    clip: rect(17px, 9999px, 5px, 0);
    transform: skew(0.71deg); }
  45% {
    clip: rect(80px, 9999px, 75px, 0);
    transform: skew(0.63deg); }
  50% {
    clip: rect(5px, 9999px, 44px, 0);
    transform: skew(0.31deg); }
  55% {
    clip: rect(4px, 9999px, 99px, 0);
    transform: skew(0.43deg); }
  60% {
    clip: rect(79px, 9999px, 67px, 0);
    transform: skew(0.86deg); }
  65% {
    clip: rect(73px, 9999px, 55px, 0);
    transform: skew(0.31deg); }
  70% {
    clip: rect(56px, 9999px, 47px, 0);
    transform: skew(0.29deg); }
  75% {
    clip: rect(66px, 9999px, 93px, 0);
    transform: skew(0.29deg); }
  80% {
    clip: rect(29px, 9999px, 20px, 0);
    transform: skew(0.93deg); }
  85% {
    clip: rect(6px, 9999px, 75px, 0);
    transform: skew(0.14deg); }
  90% {
    clip: rect(94px, 9999px, 63px, 0);
    transform: skew(0.66deg); }
  95% {
    clip: rect(19px, 9999px, 67px, 0);
    transform: skew(0.91deg); }
  100% {
    clip: rect(82px, 9999px, 3px, 0);
    transform: skew(0.65deg); } }

@keyframes glitch-skew {
  0% {
    transform: skew(3deg); }
  10% {
    transform: skew(3deg); }
  20% {
    transform: skew(5deg); }
  30% {
    transform: skew(0deg); }
  40% {
    transform: skew(-3deg); }
  50% {
    transform: skew(-4deg); }
  60% {
    transform: skew(4deg); }
  70% {
    transform: skew(5deg); }
  80% {
    transform: skew(-4deg); }
  90% {
    transform: skew(-2deg); }
  100% {
    transform: skew(4deg); } }
