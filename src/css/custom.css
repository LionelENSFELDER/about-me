@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Libre+Barcode+128+Text&family=Press+Start+2P&display=swap");
/*TAGS*/
html {
  scroll-behavior: smooth; }

body {
  font-family: "Roboto Condensed";
  color: #FFF;
  background: url("../../assets/img/wallpapers/main.gif") no-repeat center fixed;
  background-size: cover; }

footer {
  font-family: "Libre Barcode 128 Text"; }

h1 {
  font-family: "Press Start 2P";
  font-size: 2rem; }

a {
  color: inherit; }

a:hover {
  text-decoration: none;
  color: inherit; }

/*BACKGRONDS*/
.bg-dark {
  background-color: #202020 !important; }

.bg-grey {
  background-color: #2B2B2B; }

.border-main {
  border-color: #FC1B24; }

/* FONT COLOR */
.font-main {
  color: #FC1B24; }

.font-white {
  color: #FFF; }

/* FONT WEIGHT */
.custom-date, .custom-url, .custom-tags {
  font-weight: 200;
  font-size: 0.8rem;
  font-style: italic; }

.font-08 {
  font-size: 0.8rem; }

.font-12 {
  font-size: 1.2rem; }

.font-15 {
  font-size: 1.5rem; }

.font-20 {
  font-size: 2rem; }

.font-30 {
  font-size: 3rem; }

.font-40 {
  font-size: 4rem; }

.font-100 {
  font-size: 10rem; }

/* BUTTONS */
.btn-main {
  color: #FC1B24;
  border: 1px solid #FC1B24;
  background-color: transparent; }

.btn-main:hover {
  color: #202020;
  background-color: #FC1B24;
  border: 1px solid transparent; }

.btn-main-light {
  color: #FC1B24;
  border: 1px solid transparent;
  background-color: transparent; }

.btn-main-light:hover {
  color: #FC1B24; }

/*STACK CARD*/
.stack-card {
  background-color: transparent;
  border: none;
  text-align: center;
  color: white; }

.stack-card:hover {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  background-color: #202020; }

.stack-card:hover i {
  color: #FC1B24; }

/* WORK */
.workCard:hover {
  transform: scale(1.1); }

.workCard h1 {
  opacity: 0.4; }

.workCard:hover h1 {
  opacity: 1;
  color: #FC1B24; }

.workCard:hover img {
  opacity: 0.2; }

.start {
  height: 100vh;
  background-image: url("../img/wallpapers/space.jpg");
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

/* carousel */
#myCarousel {
  margin-left: 50px;
  margin-right: 50px; }

.carousel-control-prev {
  margin-left: -0px; }

.carousel-control-next {
  margin-right: -0px; }

.swiper-container {
  height: 100%; }

/* contactitem */
.contactitem-card {
  background-color: transparent;
  color: #FFF; }

.contactitem-card:hover {
  background-color: #2B2B2B; }

.contactitem-card i {
  color: #FFF; }

.contactitem-card:hover i {
  color: #FC1B24; }

.testimonial {
  background-image: url("../img/wallpapers/wallpaper.jpg");
  height: 100%;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }

.testimonial a i:hover {
  background-color: #FFF;
  color: #FC1B24; }

.testimonial img.rounded-circle {
  border: 4px solid; }

.testimonial-item-link {
  color: #FC1B24; }

.particles {
  position: fixed;
  display: block;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vh;
  z-index: -999; }

.swiper-button-next,
.swiper-button-prev {
  color: #FC1B24; }

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  /* Animation provies a slight random skew. Check bottom of doc
    for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse; }
  .glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse; }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse; }

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(8px, 9999px, 58px, 0);
    transform: skew(0.53deg); }
  5% {
    clip: rect(45px, 9999px, 97px, 0);
    transform: skew(0.83deg); }
  10% {
    clip: rect(92px, 9999px, 74px, 0);
    transform: skew(0.1deg); }
  15% {
    clip: rect(96px, 9999px, 11px, 0);
    transform: skew(0.55deg); }
  20% {
    clip: rect(85px, 9999px, 69px, 0);
    transform: skew(0.42deg); }
  25% {
    clip: rect(89px, 9999px, 17px, 0);
    transform: skew(0.29deg); }
  30% {
    clip: rect(40px, 9999px, 37px, 0);
    transform: skew(0.7deg); }
  35% {
    clip: rect(29px, 9999px, 41px, 0);
    transform: skew(0.21deg); }
  40% {
    clip: rect(97px, 9999px, 8px, 0);
    transform: skew(0.42deg); }
  45% {
    clip: rect(90px, 9999px, 27px, 0);
    transform: skew(0.52deg); }
  50% {
    clip: rect(31px, 9999px, 25px, 0);
    transform: skew(0.2deg); }
  55% {
    clip: rect(16px, 9999px, 79px, 0);
    transform: skew(0.53deg); }
  60% {
    clip: rect(71px, 9999px, 93px, 0);
    transform: skew(0.09deg); }
  65% {
    clip: rect(30px, 9999px, 32px, 0);
    transform: skew(0.3deg); }
  70% {
    clip: rect(8px, 9999px, 14px, 0);
    transform: skew(0.59deg); }
  75% {
    clip: rect(34px, 9999px, 11px, 0);
    transform: skew(0.41deg); }
  80% {
    clip: rect(58px, 9999px, 28px, 0);
    transform: skew(0.43deg); }
  85% {
    clip: rect(24px, 9999px, 28px, 0);
    transform: skew(0.44deg); }
  90% {
    clip: rect(2px, 9999px, 35px, 0);
    transform: skew(0.23deg); }
  95% {
    clip: rect(68px, 9999px, 68px, 0);
    transform: skew(0.56deg); }
  100% {
    clip: rect(69px, 9999px, 49px, 0);
    transform: skew(0.32deg); } }

@keyframes glitch-anim2 {
  0% {
    clip: rect(9px, 9999px, 30px, 0);
    transform: skew(0.15deg); }
  5% {
    clip: rect(47px, 9999px, 79px, 0);
    transform: skew(0.1deg); }
  10% {
    clip: rect(10px, 9999px, 42px, 0);
    transform: skew(0.21deg); }
  15% {
    clip: rect(43px, 9999px, 96px, 0);
    transform: skew(0.43deg); }
  20% {
    clip: rect(36px, 9999px, 47px, 0);
    transform: skew(0.87deg); }
  25% {
    clip: rect(64px, 9999px, 22px, 0);
    transform: skew(0.69deg); }
  30% {
    clip: rect(40px, 9999px, 22px, 0);
    transform: skew(0.26deg); }
  35% {
    clip: rect(5px, 9999px, 21px, 0);
    transform: skew(0.36deg); }
  40% {
    clip: rect(50px, 9999px, 95px, 0);
    transform: skew(0.01deg); }
  45% {
    clip: rect(41px, 9999px, 48px, 0);
    transform: skew(0.4deg); }
  50% {
    clip: rect(7px, 9999px, 19px, 0);
    transform: skew(0.26deg); }
  55% {
    clip: rect(58px, 9999px, 68px, 0);
    transform: skew(0.14deg); }
  60% {
    clip: rect(89px, 9999px, 93px, 0);
    transform: skew(0.8deg); }
  65% {
    clip: rect(68px, 9999px, 82px, 0);
    transform: skew(0.06deg); }
  70% {
    clip: rect(83px, 9999px, 63px, 0);
    transform: skew(0.47deg); }
  75% {
    clip: rect(4px, 9999px, 88px, 0);
    transform: skew(0.57deg); }
  80% {
    clip: rect(75px, 9999px, 96px, 0);
    transform: skew(0.77deg); }
  85% {
    clip: rect(79px, 9999px, 9px, 0);
    transform: skew(0.11deg); }
  90% {
    clip: rect(96px, 9999px, 54px, 0);
    transform: skew(0.25deg); }
  95% {
    clip: rect(38px, 9999px, 96px, 0);
    transform: skew(0.44deg); }
  100% {
    clip: rect(58px, 9999px, 90px, 0);
    transform: skew(0.41deg); } }

@keyframes glitch-skew {
  0% {
    transform: skew(5deg); }
  10% {
    transform: skew(4deg); }
  20% {
    transform: skew(1deg); }
  30% {
    transform: skew(-4deg); }
  40% {
    transform: skew(2deg); }
  50% {
    transform: skew(0deg); }
  60% {
    transform: skew(0deg); }
  70% {
    transform: skew(-4deg); }
  80% {
    transform: skew(3deg); }
  90% {
    transform: skew(0deg); }
  100% {
    transform: skew(5deg); } }
